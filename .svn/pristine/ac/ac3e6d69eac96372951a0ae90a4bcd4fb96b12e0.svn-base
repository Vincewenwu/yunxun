<?xml version="1.0" encoding="UTF-8"?>  
<web-app version="2.5"  
    xmlns="http://java.sun.com/xml/ns/javaee"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">   
	 
		
  	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	classpath:applicationContext.xml,classpath:applicationContext-shiro.xml
        </param-value>
    	<!-- <param-value>classpath:spring-dubbo-customer.xml</param-value> -->
    </context-param>
    
	<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener> 
    
    <!-- 配置Shiro filter -->
	<!-- 配置Shiro过滤器,先让Shiro过滤系统接收到的请求 -->
	<!-- 这里filter-name必须对应applicationContext-shiro.xml中定义的<bean id="shiroFilter"/> -->
	<!-- 使用[/*]匹配所有请求,保证所有的可控请求都经过Shiro的过滤 -->
	<!-- 通常会将此filter-mapping放置到最前面(即其他filter-mapping前面),以保证它是过滤器链中第一个起作用的 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  	
    <!-- 用spring Encoding,解决乱码问题 -->
	<filter>    
            <filter-name>encodingFilter</filter-name>    
            <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>    
            <init-param>    
                <param-name>encoding</param-name>    
                <param-value>UTF-8</param-value>    
            </init-param>    
            <init-param>    
                <param-name>forceEncoding</param-name>    
                <param-value>true</param-value>    
            </init-param>    
     </filter>    
     <filter-mapping>    
            <filter-name>encodingFilter</filter-name>    
            <url-pattern>/*</url-pattern>    
    </filter-mapping>
    
      <filter>
	    <filter-name>corsFilter</filter-name>
	    <filter-class>com.vision.edu.core.secure.CorsFilter</filter-class>
	    <init-param>
	      <param-name>allowOrigin</param-name>
	      <param-value>http://yunxun.com</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>corsFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	  </filter-mapping>
	  
	    <filter>
    <filter-name>HttpPutFormContentFilter</filter-name>
    <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>HttpPutFormContentFilter</filter-name>
    <servlet-name>spring</servlet-name>
  </filter-mapping>
    
    <servlet>
        <servlet-name>spring</servlet-name>
        <!-- <servlet-class>com.vision.edu.framework.util.DispatcherServletHandler</servlet-class> -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
    </servlet>
     
      <listener>
		<listener-class>com.vision.edu.framework.listener.ServerListener</listener-class>
	</listener>
    
    <listener>
  		<listener-class>com.vision.edu.core.listenter.PlatformServletContextListener</listener-class>
  	</listener>
 
	
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>*.do</url-pattern>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.htm</url-pattern>
    </servlet-mapping>
    
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.ico</url-pattern>
    </servlet-mapping>
    
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.swf</url-pattern>
    </servlet-mapping>
    
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.xap</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.docx</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.doc</url-pattern>
    </servlet-mapping>
    
    <error-page>  
        <error-code>404</error-code>  
        <location>/WEB-INF/view/error/404.jsp</location>  
    </error-page> 
    <welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>
